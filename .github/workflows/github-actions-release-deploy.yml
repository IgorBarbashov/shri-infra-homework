name: Deploy Release
run-name: Release ${{ github.event.inputs.release_version }} deployment was manually triggered by ${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version (number)'
        required: true

env:
  RELEASE_VERSION: ${{ github.event.inputs.release_version }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Authenticate with Yandex Cloud
        run: echo "${{ secrets.OAUTH_TOKEN }}" | docker login --username oauth --password-stdin cr.yandex

      - name: Connect to the VM via ssh and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PUBLIC_IP }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull cr.yandex/${{ secrets.CONTAINER_REGISTRY_ID }}/app:${{ env.RELEASE_VERSION }}_latest
            docker rm -Ð° ${{ vars.CONTAINER_NAME }} || true
            docker run -d --name ${{ vars.CONTAINER_NAME }} -p ${{ vars.PORT }}:${{ vars.PORT }} cr.yandex/${{ secrets.CONTAINER_REGISTRY_ID }}/app:${{ env.RELEASE_VERSION }}_latest
            docker container prune
            docker image prune -a

  issue-comment:
    runs-on: ubuntu-latest
    needs:
      - deploy

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config --global user.name "Shri-Deploy-Bot"
          git config --global user.email "igorbarbashov@yandex.ru"

      - name: Add comment to Release Issue
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          issue_id=$(gh issue list --label "v${{ env.RELEASE_VERSION }}" --json number --jq '.[0].number')
          if [ -n "$issue_id" ]; then
            gh issue comment $issue_id --body "$(printf "**Release deployed successfully**<br> \
              **Date:** $(date -u +"%Y-%m-%d")<br> \
              **Author:** ${{ github.actor }}<br> \
              **Version:** ${{ env.RELEASE_VERSION }}_latest<br> \
              **Docker Image:** cr.yandex/${{ secrets.CONTAINER_REGISTRY_ID }}/app:${{ env.RELEASE_VERSION }}_latest")"
          else
            echo "Issue with label v${{ env.RELEASE_VERSION }} not found."
            exit 1
          fi
